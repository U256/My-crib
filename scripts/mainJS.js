//Переменная, которая объявлена без инициализации имеет по умолчанию значение undefined.
//Значение NaN возвращается в результате выполнения математических операций, которые JavaScript не может вычислить.

5 - 'Hi'; // NaN (от числа 5 отнять строку)

//////////////////////////////////////////////
// Создание объектов в JavaScript можно осуществить синтаксически разными способами, с помощью таких как:
/////////////////////////////////////////////
// литерала объекта;
// Object.create;
// функции - конструктора new
// ключевого слова class.

var point = {
    x: 40,
    y: 60,
    toString() { //эквивалентно toString: function (){}
        return 'x = ' + x + '; y = ' + y;
    }
}

// добавление свойства к объекту:
point.z = 35;

// Удаление свойства у объекта осуществляется с помощью оператора delete:
delete point.z

// Проверить есть ли свойство у объекта можно с помощью оператора in:
'z' in point;


// функция-конструктор Point
function Point(x, y) {
    this.x = x;
    this.y = y;
}

// Функция - конструктор в качестве результата автоматически возвращает this.

// Доступ к свойствам объектов может осуществляться 2 способами:
// через точку;
// посредством квадратных скобок.

// использование квадратных скобок является единственным способом,
// с помощью которого можно получить доступ к свойствам объекта,
// имена которых составлены не по правилам именования переменных.

point['x']; // значение, заданное в ' '


// создание только одного объекта point с использованием функции-конструктора
// это бесполезно, можно обойтись и без new в данном случае
var point = new function () {
    this.x = 20;
    this.y = 25;
}

// Object.create - это ещё один способ создания нового объекта в JavaScript.
// Данный способ отличается от других тем, что он позволяет указать прототип для создаваемого объекта.
// В качестве прототипа можно указывать не только объект, но и специальное значение null.
// Если указать null, то это будет означать, что объект не будет иметь прототипа.
// создание объекта point через Object.create
var poi = Object.create(null);
// добавление свойств объекту point
poi.x = 10;
Object.getPrototypeOf(poi); // null


// Создание объектов посредством ключевого слова class
//  Классы в JavaScript в ECMAScript 2015(ES6)
// Создание объектов выполняется с помощью ключевого слова new и названия класса.В круглых скобках при
// необходимости указываются аргументы, которые может использовать constructor при создании объекта.
// Ключевое слово this в классе указывает на создаваемый(новый) объект

class PointB {
    // конструктор объекта (параметры x и у по умолчанию будут иметь значение 0)
    constructor(x = 0, y = 0) {
        this.x = x;
        this.y = y;
        Point.count++;
    }
    count = 0;
    //methods:
    getInfo() {
        return 'Координаты точки: (' + this.x + ', ' + this.y + ')';
    }
}
// создаём объект на базе класса Point
var point_1 = new PointB(5, 17);

// Проверим является ли класс Point функцией?
console.log(typeof PointB); // function

// Содержит ли переменная point_1 объект, а точнее ссылку на него?
console.log(typeof point_1); // object

// Является ли point_1 представителем класса Point?
console.log(point_1 instanceof PointB); // true

